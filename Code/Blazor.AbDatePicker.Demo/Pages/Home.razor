@page "/"
@using System.Text.Json
@using DayOfWeek = Blazor.AbDatePicker.DayOfWeek

<br/>
<div class="row">
    <div class="col-md-4">
        <h3>Datepicker</h3>
        <br/>
        <div class="row">
            <div class="form-group ">
                <label class="col-form-label">
                    Date (English - United Kingdom):
                    <AbDatepicker @bind-Value="Date" Options="Options"></AbDatepicker>
                </label>
            </div>
            <div class="form-group ">
                <label class="col-form-label">
                    Selected Date:
                    <span class="alert alert-success">@Date.Value.ToShortDateString()</span>
                </label>
            </div>
        </div>
        <br/>
    </div>
    <div class="col-md-8">
        <h3>Options</h3>
        <br/>
        <div class="row">
            <div class="form-group col-sm-6">
                <label class="col-form-label">Themes:</label>
                <select @bind="Options.Theme" class="form-control">
                    @foreach (var item in Enum.GetValues(typeof(Theme)))
                    {
                        <option value="@item">@item</option>
                    }
                </select>              
            </div>
            <div class="form-group col-sm-6">
                <label class="col-form-label">Start view:</label>
                <select @bind="Options.StartView" class="form-control">
                    @foreach (var item in Enum.GetValues(typeof(StartView)))
                    {
                        <option value="@item">@item</option>
                    }
                </select>              
            </div>
            <div class="form-group col-sm-12">
                <label class="col-form-label">
                    weekDayFormat:
                    two check boxes
                </label>
            </div>
            <div class="form-group col-sm-6">
                <label class="col-form-label">First day of week:</label>
                <select @bind="Options.FirstDayOfWeek" class="form-control">
                    @foreach (var item in Enum.GetValues(typeof(DayOfWeek)))
                    {
                        <option value="@item">@item</option>
                    }
                </select>
            </div>
            <div class="form-group col-sm-6">
                <label class="col-form-label">Days of week disabled:</label>
                <SelectMultiple @bind-Value="Options.DisabledDayOfWeek" Multiple="true" Title="Select From Fruits..." ClassNames="form-control"
                                 ChangeType="(object obj) => (DayOfWeek)Enum.Parse(typeof(DayOfWeek), obj.ToString())">
                    @foreach (DayOfWeek item in Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>())
                    {
                        <option value="@item.ToString("G")">@item.ToString("G")</option>
                    }
                </SelectMultiple>
                <br/>
                <button class="btn" @onclick="OnTest">Test</button>
                @*<label>Selected</label>
                <code>@(string.Join("; ", fruits.ToString()))</code>*@
                @*<select @bind="test" class="form-control" title="Days of week disabled" multiple size="3" @onchange="SelectionChanged" >
                    @foreach (var item in Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>())
                    {
                        <option value="@((byte)item)">@(item.ToString("G"))</option>
                    }
                </select>*@
                @*<select @bind="Options.DisabledDayOfWeek" class="form-control">
            @foreach (var ffe in Enum.GetValues(typeof(DayOfWeek)))
            {
                <option value="@ffe">@ffe</option>
            }
        </select>*@
            </div>
        </div>
        <hr/>
        <div class="form-group col-sm-8">
            <label class="col-form-label">Json:</label>
            <code>
                @JsonSerializer.Serialize(Options, new JsonSerializerOptions{ PropertyNamingPolicy = JsonNamingPolicy.CamelCase, })
            </code>
        </div>
    </div>

</div>

@code {

    private DateTime? Date { get; set; } = DateTime.Now.Date.AddDays(-7);
    private AdDatepickerOptions Options { get; set; } = new AdDatepickerOptions();

    private void OnTest()
    {
        Console.WriteLine(string.Join("; ", Options.DisabledDayOfWeek.Select(x => x.ToString("G"))));
    }
}
